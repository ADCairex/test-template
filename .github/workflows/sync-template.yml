name: sync-template-to-project-1

on:
  pull_request:
    types: [closed]
    branches:
      - main  # Ejecuta solo si se mergea en main del template

jobs:
  sync_template:
    name: Sync template to test-template-project-1
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    env:
      TARGET_REPO: ADCairex/test-template-project-1

    steps:
      - name: Checkout template repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_FOR_TEMPLATE_PUSH }}

      - name: Set up Git config
        run: |
          git config --global user.name "Template Bot"
          git config --global user.email "bot@template.com"

      - name: Define sync branch name
        id: vars
        run: |
          echo "branch=${{ github.event.pull_request.head.ref }}-sync-template" >> $GITHUB_OUTPUT

      - name: Clone target repo into temp directory
        run: |
          git clone https://x-access-token:${{ secrets.PAT_FOR_TEMPLATE_PUSH }}@github.com/${{ env.TARGET_REPO }} .tmp_repo
          cd .tmp_repo
          git checkout -b "${{ steps.vars.outputs.branch }}"
          cd ..

      - name: Sync template files into cloned repo
        run: |
          rsync -av --delete --exclude '.git/' --exclude '.github/' ./ ./

      - name: Commit and push changes to target branch
        run: |
          cd .tmp_repo
          git add .
          git commit -m "Sync from template: PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
          git push origin "${{ steps.vars.outputs.branch }}"

      - name: Create PR in target project
        env:
          GH_TOKEN: ${{ secrets.PAT_FOR_TEMPLATE_PUSH }}
        run: |
          cd .tmp_repo
          gh pr create \
            --title "Sync from template (PR #${{ github.event.pull_request.number }})" \
            --body "This PR includes synchronized changes from the template repository after merging PR #${{ github.event.pull_request.number }}." \
            --head "${{ steps.vars.outputs.branch }}" \
            --base main \
            --repo ${{ env.TARGET_REPO }}
